        烧写“编译后可直接使用的文件总汇”文件夹里的u-boot.bin
oflash u-boot.bin
0
1
1
0
重启开发板

        修改linux3.4.2内核
打开“linux-3.4.2-JZ2440V3-master”文件夹，它已经包含4.3LCD、触屏、网卡的驱动，但是没有修改内核所在分区的大小，需要修改为4M
vim arch/arm/mach-s3c24xx/common-smdk.c +125
把.size  = 2M改为.size =4M

        编译linux3.4.2内核
执行两条指令
cp config_ok .config
make uImage CROSS_COMPILE=/usr/local/arm/gcc-4.4.3/bin/arm-linux- ARCH=arm -j8 （确保修改为自己的编译器路径）

        烧写linux3.4.2内核
提前安装打开TFTP server软件，设定好指定文件夹（含有uImage的文件夹）
set ipaddr 192.168.0.52
set serverip 192.168.0.50 （看TFTP server软件里的地址）
set gatewayip 192.168.0.1
print （查看配置是否正确）
ping 192.168.0.50 （看是否能ping通）
tftp 0x30000000 uImage
nand erase.part kernel
nand write.jffs2 0x30000000 0x60000 $filesize
boot
若有乱码，重启开发板，输入 set bootargs console=ttySAC0,115200
save
boot
    
        不明确是否需要再ubuntu上编译完tslib（需要则查询“2440移植qt”）
    
        烧写yaffs2文件系统
提前准备TFTP server软件，设定好文件夹路径
tftp 0x30000000 busybox.yaffs2
nand erase.part rootfs
nand write.yaffs 0x30000000 0x460000 $filesize
重启开发板
set bootargs console=ttySAC0,115200 root=/dev/mtdblock3 init=/linuxrc
save
boot
此时linux系统启动正常
        
        校准与测试触控屏
cd /usr/local/tslib
./ts_calibrat
./ts_test

        交叉编译安装qt5.6.0
tar -zxf qt-everywhere-opensource-src-5.6.0.tar.gz
cd qt-everywhere-opensource-src-5.6.0/
mkdir /home/hehui/work/jz2440/qt/Qt5.6/ -r
touch qt-build.sh
vim qt-build.sh
把下面的复制进去
（-prefix后面是编译好的Qt安装路径，提前建立好
-I后面是编译安装好的tslib中include路径
-L后面是编译安装好的tslib中lib路径）

#!/bin/sh
./configure -prefix /home/hehui/work/jz2440/qt/Qt5.6 \
-v \
-opensource \
-release \
-confirm-license \
-xplatform linux-arm-gnueabi-g++ \
-shared \
-qt-zlib \
-no-gif \
-qt-libjpeg \
-no-nis \
-no-opengl \
-no-cups \
-no-glib \
-no-dbus \
-no-rpath \
-no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 \
-no-avx \
-no-openssl \
-nomake tools \
-qreal float \
-qt-libpng \
-tslib \
-nomake examples \
-I /home/hehui/work/jz2440/qt/tslib_root/include \
-L /home/hehui/work/jz2440/qt/tslib_root/lib

vim qtbase/mkspecs/linux-arm-guneabi-g++/qmake.conf
把下面的替换进去

#
# qmake configuration for building with arm-linux-gnueabi-g++
#

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_INCREMENTAL_STYLE = sublib

QT_QPA_DEFAULT_PLATFORM = linuxfb
QMAKE_CFLAGS 	+= -msoft-float -D__GCC_FLOAT_NOT_NEEDED -march=armv4t -mtune=arm920t 
QMAKE_CXXFLAGS 	+= -msoft-float -D__GCC_FLOAT_NOT_NEEDED -march=armv4t -mtune=arm920t

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/g++-unix.conf)

# modifications to g++.conf
QMAKE_CC                = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-gcc -lts
QMAKE_CXX               = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-g++ -lts
QMAKE_LINK              = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-g++ -lts
QMAKE_LINK_SHLIB        = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-g++ -lts

# modifications to linux.conf
QMAKE_AR                = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-ar cqs
QMAKE_OBJCOPY           = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-objcopy
QMAKE_NM                = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-nm -P
QMAKE_STRIP             = /usr/local/arm/gcc-4.4.3/bin/arm-none-linux-gnueabi-strip

开始编译安装
./qt-build.sh
make -j8
make install
然后把编译出来的的lib和plugins文件夹拷贝到开发板的/usr/local/Qt5.6下
配置开发板环境变量
vi /etc/profile
复制下面一段
export QTEDIR=/usr/local/Qt5.6
export LD_LIBRARY_PATH=/usr/local/Qt5.6/lib: LD_LIBRARY_PATH
export QT_QPA_GENERIC_PLUGINS=tslib
export QT_QPA_FONTDIR=$QTEDIR/lib/fonts 
export QT_QPA_PLATFORM_PLUGIN_PATH=$QTEDIR/plugins 
export QT_QPA_PLATFORM=linuxfb:fb=/dev/fb0:size=480x272:mmsize=480x272:offset=0x0:tty=/dev/tty1
export QT_QPA_FB_TSLIB=1

        利用qt creater4.7.1编译qt5.6应用程序
里面报错：‘nullptr’ was not declared in this scope
解决办法：程序里把nullptr换成0

        nfs连接命令
设置好ip，ping通
mkdir /mnt/nfs -r
mount -t nfs -o intr,nolock,rsize=1024,wsize=1024 192.168.1.120:/home/hehui/work/nfsroot /mnt/nfs/

        安装preloadabel_libiconv.so文件
把此文件复制到/usr/lib/文件夹下，在etc/profile中添加
export LD_PRELOAD=/usr/lib/preloadable_libiconv.so:$TSLIB_ROOT/lib/libts.so

        开机后台自动运行程序
打开/urs/etc/rc.local文件
加入 /./untitled &
重启开发板

        至此移植完成



         







